parameters:
  artifactsRootDir: $(System.DefaultWorkingDirectory)/.artifacts

steps:
  # Clean
  - checkout: self
    clean: all

  # Build, test and generate artifact output
  - powershell: ./build
    displayName: 'Build'
    continueOnError: 'false'

  # Publish test results
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testRunTitle: 'Units Tests'
      testResultsFiles: $(artifactsRootDir)/**/test-results/**/*.trx
      searchFolder: $(artifactsRootDir)
      testResultsFormat: VSTest
      mergeTestResults: true

  # Publish code coverage results
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Coverage Results'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(artifactsRootDir)/**/code-coverage/results.*.xml
      reportDirectory: $(artifactsRootDir)/**/code-coverage/results
      additionalCodeCoverageFiles: $(artifactsRootDir)/**/code-coverage/results/*

  # Copy generated artifact outputs
  - task: CopyFiles@2
    displayName: 'Copy Files to Artifact Staging'
    inputs:
      SourceFolder: $(artifactsRootDir)/**/output
      Contents: '**\*'
      TargetFolder: $(Build.ArtifactStagingDirectory)

  # Publish artifacts
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Build Artifact'
    inputs:
      artifactName: 'drop'
      targetPath: $(Build.ArtifactStagingDirectory)
